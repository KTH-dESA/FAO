workdir: sys.path[0] #this line it to set the working directory to the location of the snakefile

######################### User defined parameters #############################
dash_folder = "dashboard" #set the dashboard folder

# SCENARIOS = ['Reference', 'Desalination','Irrigation Intensification'] #define the list of scenarios to run
# W_RATE = [0, 0.3, 0.5, 0.7] #define the list of wind technology cost reduction rate
# PV_RATE = [0, 0.3, 0.5, 0.7] #define the list of solar PV technology cost reduction rate
# GRID_RATE = [0, -0.3, -0.5, -0.7] #define the list of grid price increment rate
CLIMATE = ['Trend'] #, 'Climate Change'] #define the list of climates to run
# CLIMATE = ['Trend']
SCENARIOS = ['Reference'] #, 'Desalination','Irrigation Intensification', 'Reference Wastewater Reuse', 'Desalination Wastewater Reuse']
W_RATE = [0]
BT_RATE = [0]
PV_RATE = [0]
GRID_RATE = [0]
PV_LEVELS = [10,20,50]
BUTANE_PHASEOUT_SCENARIOS = [None, 2040, 2030]
###############################################################################

rule all:
    input: 
        # expand("{dash_folder}/data/{scenario}/{climate}/W{w_rate}_PV{pv_rate}_Grid{grid_rate}/lcoe.gz", \
                  # scenario=SCENARIOS, climate=CLIMATE, w_rate=W_RATE, \
                  # pv_rate=PV_RATE, grid_rate=GRID_RATE, dash_folder=dash_folder), \
        # expand("{dash_folder}/data/{scenario}/{climate}/W{w_rate}_PV{pv_rate}_Grid{grid_rate}/least-cost-2050.png", \
                  # scenario=SCENARIOS, climate=CLIMATE, w_rate=W_RATE, \
                  # pv_rate=PV_RATE, grid_rate=GRID_RATE, dash_folder=dash_folder), \
        #expand("{dash_folder}/data/{scenario}/{climate}/results.gz",
               #scenario=SCENARIOS, climate=CLIMATE, dash_folder=dash_folder)
        expand("{dash_folder}/data/{scenario}/{climate}/Butane Calculations/{butane_phaseout}/{pv_level}/summary_results.gz",
               scenario=SCENARIOS, climate=CLIMATE, butane_phaseout=BUTANE_PHASEOUT_SCENARIOS , pv_level=PV_LEVELS , dash_folder=dash_folder)

rule schematic_processing:
    input: provinces="data/gis/admin/provinces.gpkg", \
           groundwater="data/schematic/Groundwater.kml", \
           wwtp="data/schematic/Wastewater Treatment Plants.kml", \
           other_supply="data/schematic/Other Supplies.kml", \
           river_with="data/schematic/River Withdrawals.kml", \
           demand_sites="data/schematic/Demand Sites.kml", \
           catchments="data/schematic/Catchments.kml", \
           diversions="data/schematic/Diversions.kml", \
           reservoirs="data/schematic/Reservoirs.kml", \
           links="data/schematic/Transmission Links.kml"
    output: demand_points="data/gis/processed layers/demand_points.gpkg"
    script: 'scripts/schematic_processing.py'
    
rule cropland_processing:
    input: demand_points="data/gis/processed layers/demand_points.gpkg", \
           cropland="data/gis/cropland/cropland.csv"
    output: "data/gis/processed layers/cropland.gz"
    script: 'scripts/cropland_processing.py'

rule softlinking:
    input: data="data/WEAP Results/Results - {scenario} - {climate}.xlsx", \
           demand_points="data/gis/processed layers/demand_points.gpkg"
    params: scenario="{scenario}", climate="{climate}"
    output: demand_data="data/processed results/{scenario}/{climate}/demand_data.gz", \
            wwtp_inflow="data/processed results/{scenario}/{climate}/wwtp_inflow.gz"
    script: 'scripts/softlinking.py'
    
rule energy_model:
    input: demand_data="data/processed results/{scenario}/{climate}/demand_data.gz", \
           wwtp_inflow="data/processed results/{scenario}/{climate}/wwtp_inflow.gz"
    params: scenario="{scenario}", climate="{climate}"
    output: f"{dash_folder}/data/{{scenario}}/{{climate}}/results.gz"
    script: 'scripts/energy_model.py'
    
rule lcoe_model:
    input: results=f"{dash_folder}/data/{{scenario}}/{{climate}}/results.gz", \
           cropland="data/cropland/cropland.gz"
    params: scenario="{scenario}", climate="{climate}", w_rate="{w_rate}", \
            pv_rate="{pv_rate}", grid_rate="{grid_rate}"
    output: f"{dash_folder}/data/{{scenario}}/{{climate}}/W{{w_rate}}_PV{{pv_rate}}_Grid{{grid_rate}}/lcoe.gz"
    script: 'scripts/lcoe_model.py'    

rule lcoe_maps:
    params: results=f"{dash_folder}/data/{{scenario}}/{{climate}}/W{{w_rate}}_PV{{pv_rate}}_Grid{{grid_rate}}/lcoe.gz", \
            cropland="data/gis/cropland/cropland.csv", \
            scenario="{scenario}", climate="{climate}", w_rate="{w_rate}", \
            pv_rate="{pv_rate}", grid_rate="{grid_rate}"
    output: f"{dash_folder}/data/{{scenario}}/{{climate}}/W{{w_rate}}_PV{{pv_rate}}_Grid{{grid_rate}}/least-cost-2050.png"
    script: 'scripts/lcoe_maps.py' 

rule butane_calculations:
    input: results=f"{dash_folder}/data/{scenario}/{climate}/results.gz", \
            cropland=r"data\cropland\cropland.gz"
    params: scenario="{scenario}", climate="{climate}", \
            butane_phaseout="{butane_phaseout}", pv_level="{pv_level}"
    output: f"{dash_folder}/data/{{scenario}}/{{climate}}/Butane_Calculations/{{butane_phaseout}}/{{pv_level}}/summary_results.gz"
    script: 'scripts/butane_calculations.py' 